/*
 * This file was generated by the Gradle 'init' task.
 */
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "biz.aQute.bnd:biz.aQute.bnd.gradle:5.1.2"
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'maven-publish'
    id 'application'
    id 'biz.aQute.bnd.builder' version "5.1.2"
}

apply plugin: "biz.aQute.bnd.builder"
//apply plugin: 'org.springframework.boot'

repositories {
    mavenCentral()
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "src/main/resources/bundles.xsd"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.6, target: 1.6, debug: true,
                    debugLevel: "lines,vars,source", includeantruntime: false,
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}

configurations {
    jaxb
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web'){
        exclude group: 'org.springframework.boot:spring-boot-starter-tomcat'
    }

//    implementation 'org.springframework.boot:spring-boot-starter-tomcat:2.3.3.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.springframework.osgi:spring-osgi-io:1.2.1'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation ('org.springframework.boot:spring-boot-starter-web-services') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation "com.sun.xml.messaging.saaj:saaj-impl:1.5.2"
    implementation 'org.springframework.ws:spring-ws-core'
    implementation 'wsdl4j:wsdl4j:1.6.3'
    jaxb("org.glassfish.jaxb:jaxb-xjc:2.2.11")
    compile(files(genJaxb.classesDir).builtBy(genJaxb))
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    compile group: 'biz.aQute.bnd', name: 'biz.aQute.bnd.gradle', version: '5.1.2'
    compileOnly 'org.osgi:org.osgi.core:5.0.0'
}
mainClassName = 'spring.demo.DemoApplication'


group = 'spring'
version = '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

//jar {
//    manifest {
//        attributes('-exportcontents': 'spring.demo.*',
//            '-sources': 'true',
//            '-include': 'other.bnd',
//            'Main-Class': 'spring.demo.DemoApplication')
//    }
//}

import aQute.bnd.gradle.Bundle
//import com.sun.tools.doclets.internal.toolkit.util.Util

tasks.register('bundle',  Bundle) {
    from sourceSets.main.output
}
bundle {
    manifest {
        attributes 'Bundle-Name': 'test-bundle-myosgi',
            'Bundle-SymbolicName': 'spring.demo',
            'Bundle-ManifestVersion': 2,
            'Bundle-Activator': 'spring.demo.DemoApplication',
            'Export-Package': '*',
            'Import-Package': 'org.osgi.framework, org.springframework.boot, org.springframework.boot.autoconfigure, javax.naming, javax.management, javax.management.modelmbean, javax.net.ssl, org.ietf.jgss, org.xml.sax, javax.xml.parsers, org.osgi.service.packageadmin, org.springframework.boot.web.servlet.support, javax.xml.transform, org.w3c.dom, javax.xml.namespace, javax.xml.xpath, javax.xml.stream, javax.xml.transform.dom, com.sun.xml.messaging.saaj',
            'Start-Class': 'spring.demo.DemoApplication',
            'Embed-Dependency': '*;artifactId=org.apache.felix.framework;inline=true'
    }
}//'org.osgi.framework',
